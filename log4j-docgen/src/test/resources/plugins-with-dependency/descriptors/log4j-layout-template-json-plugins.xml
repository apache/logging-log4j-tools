<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to you under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<pluginSet xmlns="https://logging.apache.org/xml/ns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://logging.apache.org/xml/ns https://logging.apache.org/xml/ns/log4j-plugins-0.1.0.xsd" version="0.1.0">
  <groupId>org.apache.logging.log4j</groupId>
  <artifactId>log4j-layout-template-json</artifactId>
  <version>2.23.0</version>
  <description>Apache Log4j Layout for producing JSON output that is structured according to a user-provided template.</description>
  <scalars>
    <scalar className="java.nio.charset.Charset"></scalar>
    <scalar className="org.apache.logging.log4j.layout.template.json.JsonTemplateLayout.EventTemplateAdditionalField.Format">
      <values>
        <value name="STRING"></value>
        <value name="JSON"></value>
      </values>
    </scalar>
    <scalar className="org.apache.logging.log4j.layout.template.json.util.RecyclerFactory"></scalar>
  </scalars>
  <plugins>
    <plugin name="JsonTemplateLayout" className="org.apache.logging.log4j.layout.template.json.JsonTemplateLayout">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.core.Layout</supertype>
        <supertype>org.apache.logging.log4j.core.StringLayout</supertype>
        <supertype>org.apache.logging.log4j.core.impl.LocationAware</supertype>
        <supertype>org.apache.logging.log4j.core.layout.Encoder</supertype>
      </supertypes>
      <attributes>
        <attribute name="charset" type="java.nio.charset.Charset"></attribute>
        <attribute name="eventDelimiter"></attribute>
        <attribute name="eventTemplate"></attribute>
        <attribute name="eventTemplateRootObjectKey"></attribute>
        <attribute name="eventTemplateUri"></attribute>
        <attribute name="locationInfoEnabled" type="boolean"></attribute>
        <attribute name="maxStringLength" type="int"></attribute>
        <attribute name="nullEventDelimiterEnabled" type="boolean"></attribute>
        <attribute name="recyclerFactory" type="org.apache.logging.log4j.layout.template.json.util.RecyclerFactory"></attribute>
        <attribute name="stackTraceElementTemplate"></attribute>
        <attribute name="stackTraceElementTemplateUri"></attribute>
        <attribute name="stackTraceEnabled" type="boolean"></attribute>
        <attribute name="truncatedStringSuffix"></attribute>
      </attributes>
      <elements>
        <element multiplicity="*" type="org.apache.logging.log4j.layout.template.json.JsonTemplateLayout.EventTemplateAdditionalField"></element>
      </elements>
    </plugin>
    <plugin name="EventTemplateAdditionalField" className="org.apache.logging.log4j.layout.template.json.JsonTemplateLayout.EventTemplateAdditionalField">
      <supertypes>
        <supertype>java.lang.Object</supertype>
      </supertypes>
      <attributes>
        <attribute name="format" type="org.apache.logging.log4j.layout.template.json.JsonTemplateLayout.EventTemplateAdditionalField.Format"></attribute>
        <attribute name="key"></attribute>
        <attribute name="value"></attribute>
      </attributes>
    </plugin>
    <plugin name="CaseConverterResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.CaseConverterResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:CaseConverterResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="CounterResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.CounterResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:CounterResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="EndOfBatchResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.EndOfBatchResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:EndOfBatchResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="EventAdditionalFieldInterceptor" namespace="JsonTemplateResolverInterceptor" className="org.apache.logging.log4j.layout.template.json.resolver.EventAdditionalFieldInterceptor">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverInterceptor</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor</supertype>
      </supertypes>
      <description>Interceptor to add xref:EventTemplateAdditionalField.adoc[] after event template read.</description>
    </plugin>
    <plugin name="EventRootObjectKeyInterceptor" namespace="JsonTemplateResolverInterceptor" className="org.apache.logging.log4j.layout.template.json.resolver.EventRootObjectKeyInterceptor">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverInterceptor</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor</supertype>
      </supertypes>
      <description>Interceptor to add a root object key to the event template.</description>
    </plugin>
    <plugin name="ExceptionResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.ExceptionResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:ExceptionResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="ExceptionRootCauseResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.ExceptionRootCauseResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:ExceptionRootCauseResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="LevelResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.LevelResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:LevelResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="LoggerResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.LoggerResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:LoggerResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="MainMapResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.MainMapResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:MainMapResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="MapResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.MapResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:MapResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="MarkerResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.MarkerResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:MarkerResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="MessageParameterResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.MessageParameterResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:MessageParameterResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="MessageResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.MessageResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>A xref:MessageResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="PatternResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.PatternResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:PatternResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="SourceResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.SourceResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:SourceResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="ThreadContextDataResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.ThreadContextDataResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:ThreadContextDataResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="ThreadContextStackResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.ThreadContextStackResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:ThreadContextStackResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="ThreadResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.ThreadResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:ThreadResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="TimestampResolverFactory" namespace="JsonTemplateResolverFactory" className="org.apache.logging.log4j.layout.template.json.resolver.TimestampResolverFactory">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory</supertype>
        <supertype>org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory</supertype>
      </supertypes>
      <description>xref:TimestampResolver.adoc[] factory.</description>
    </plugin>
    <plugin name="RecyclerFactoryConverter" namespace="TypeConverter" className="org.apache.logging.log4j.layout.template.json.util.RecyclerFactoryConverter">
      <supertypes>
        <supertype>java.lang.Object</supertype>
        <supertype>org.apache.logging.log4j.core.config.plugins.convert.TypeConverter</supertype>
      </supertypes>
      <description>The default string (i.e., recycler factory spec) to xref:RecyclerFactory.adoc[] type converter.</description>
    </plugin>
  </plugins>
  <abstractTypes>
    <abstractType className="org.apache.logging.log4j.core.Layout"></abstractType>
    <abstractType className="org.apache.logging.log4j.core.StringLayout"></abstractType>
    <abstractType className="org.apache.logging.log4j.core.config.plugins.convert.TypeConverter"></abstractType>
    <abstractType className="org.apache.logging.log4j.core.impl.LocationAware"></abstractType>
    <abstractType className="org.apache.logging.log4j.core.layout.Encoder"></abstractType>
    <abstractType className="org.apache.logging.log4j.layout.template.json.resolver.EventResolverFactory">
      <description>xref:TemplateResolverFactory.adoc[] specialized for xref:LogEvent.adoc[]s.</description>
    </abstractType>
    <abstractType className="org.apache.logging.log4j.layout.template.json.resolver.EventResolverInterceptor">
      <description>xref:TemplateResolverInterceptor.adoc[] specialized for xref:LogEvent.adoc[]s.</description>
    </abstractType>
    <abstractType className="org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverFactory">
      <description>xref:TemplateResolver.adoc[] factory.</description>
    </abstractType>
    <abstractType className="org.apache.logging.log4j.layout.template.json.resolver.TemplateResolverInterceptor">
      <description>Main xref:TemplateResolver.adoc[] compilation interception interface.</description>
    </abstractType>
  </abstractTypes>
</pluginSet>
