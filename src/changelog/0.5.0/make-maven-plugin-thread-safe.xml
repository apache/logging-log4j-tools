<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to you under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<entry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://logging.apache.org/log4j/changelog"
       xsi:schemaLocation="http://logging.apache.org/log4j/changelog https://logging.apache.org/log4j/changelog-0.1.2.xsd"
       type="changed">
  <issue id="80" link="https://github.com/apache/logging-log4j-tools/issues/80"/>
  <author id="github:vy"/>
  <!-- The definition of what is "thread-safe" from a Maven point of view is really unclear.
       The only relevant resource is the issue wiki regarding the parallel builds introduced in Maven 3: https://cwiki.apache.org/confluence/display/MAVEN/Parallel+builds+in+Maven+3#ParallelbuildsinMaven3-Mojothreadsafetyassertionchecklist
       The guidance provided there is as follows:

       - Check all static fields/variables in plugin code are not subject to threading problems.
         You might want to pay special attention to static member variables of the subclasses of `java.text.Format` (`NumberFormat`, `DateFormat`, etc.), most of which are not thread-safe and cannot be shared as static variables.

       - Check any plexus `components.xml`; if the components defined are singletons they need to be thread-safe.

       - Check for presence of known tainted libraries.

       - Check thread-safety of any other third party libraries.
         This last item can be a bit hard, but inquiries on mailing lists can get you a long way.

       I think we are not prone to any of the problems shared above.
       To be certain, I have added `synchronized` modifier to each `execute()` method. -->
  <description format="asciidoc">Make `log4j-changelog-maven-plugin` thread-safe</description>
</entry>
